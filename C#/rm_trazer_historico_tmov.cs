//------------------------------------------------------------------------------
// Traz o campo de histórico para a janela de outras movimentações no RM com minimo impacto no desempenho
// Usado como formula visual no RM Totvs
//------------------------------------------------------------------------------
// <auto-generated>
//     O código foi gerado por uma ferramenta.
//     Versão de Tempo de Execução:4.0.30319.42000
//
//     As alterações ao arquivo poderão causar comportamento incorreto e serão perdidas se
//     o código for gerado novamente.
// </auto-generated>
//------------------------------------------------------------------------------

using RM.Con.SourceCode.Intf;
using RM.Con.SourceCode.Server;
using RM.Lib;
using RM.Lib.Data;
using RM.Lib.Server;
using RM.Mov.Movimento;
using System;
using System.Collections.Generic;
using System.Data;
using System.Linq;
using System.Text;


namespace RM.ClassesCustomizadas
{
  
  
  public class CodigoFonteCustomizado : SrcBase, ISrcDataServer, ISrcProcess, ISrcSubscriber, ISrcCommon
  {
    
    public void CustomDataServer(RM.Con.SourceCode.Intf.SrcDataServerParams dataServerParams)
    {
      dataServerParams.DataSet.Tables["TMOV"].Columns.Add("Histórico",typeof(String));
      bool primeiroRegistro = true;
      string strParametro = "";
      string strColigada = "";
      string strSentenca = "";
      foreach(DataRow movimento in dataServerParams.DataSet.Tables["TMOV"].Rows)
      {
        if (primeiroRegistro)
        {
          //  O primeiro deve não pode conter o " OR = ", também é usado para conseguir o codigo da coligada
          strParametro += ""+movimento["IDMOV"].ToString()+"";
          strColigada = movimento["CODCOLIGADA"].ToString();
          primeiroRegistro = false;
        }
        else
        {
          strParametro += " OR M.IDMOV = "+movimento["IDMOV"].ToString()+"";
        }
      }
      strSentenca += "SELECT M.IDMOV,H.HISTORICOCURTO FROM TMOV M INNER JOIN TMOVHISTORICO H ON H.IDMOV = M.IDMOV AND H.CODCOLIGADA = M.CODCOLIGADA";
      strSentenca += " WHERE (M.IDMOV = "+ strParametro +" ) AND H.HISTORICOCURTO IS NOT NULL AND M.CODCOLIGADA = "+strColigada;
      RMSConsSQLExecServer query = new RMSConsSQLExecServer();
      DataTable dtRetorno = query.ExecSQL(strSentenca,null);
      foreach(DataRow movimento in dataServerParams.DataSet.Tables["TMOV"].Rows)
      {
        foreach(DataRow resultado in dtRetorno.Rows)
        {
          if(movimento["IDMOV"].ToString()==resultado["IDMOV"].ToString())
          {
            movimento["Histórico"]=resultado["HISTORICOCURTO"].ToString();
          }
        }
      }
    }
    
    public void CustomProcess(RM.Con.SourceCode.Intf.SrcProcessParams processParams)
    {
    }
    
    public void CustomSubscriber(RM.Con.SourceCode.Intf.SrcSubscriberParms subscriberParams)
    {
    }
    
    public void CustomCommon(RM.Con.SourceCode.Intf.SrcCommonParams commonParams)
    {
    }
  }
}
